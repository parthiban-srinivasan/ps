// Code generated by protoc-gen-go.
// source: peril_search.proto
// DO NOT EDIT!

/*
Package perils is a generated protocol buffer package.

It is generated from these files:
	peril_search.proto

It has these top-level messages:
	SearchRequest
	SearchReply
*/
package perils

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// The request message structure.
type SearchRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// The response message structure
type SearchReply struct {
	Perilinfo string `protobuf:"bytes,1,opt,name=perilinfo" json:"perilinfo,omitempty"`
}

func (m *SearchReply) Reset()                    { *m = SearchReply{} }
func (m *SearchReply) String() string            { return proto.CompactTextString(m) }
func (*SearchReply) ProtoMessage()               {}
func (*SearchReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*SearchRequest)(nil), "perils.SearchRequest")
	proto.RegisterType((*SearchReply)(nil), "perils.SearchReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for PerilSearch service

type PerilSearchClient interface {
	// Sends an address
	SearchPeril(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchReply, error)
}

type perilSearchClient struct {
	cc *grpc.ClientConn
}

func NewPerilSearchClient(cc *grpc.ClientConn) PerilSearchClient {
	return &perilSearchClient{cc}
}

func (c *perilSearchClient) SearchPeril(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchReply, error) {
	out := new(SearchReply)
	err := grpc.Invoke(ctx, "/perils.PerilSearch/SearchPeril", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PerilSearch service

type PerilSearchServer interface {
	// Sends an address
	SearchPeril(context.Context, *SearchRequest) (*SearchReply, error)
}

func RegisterPerilSearchServer(s *grpc.Server, srv PerilSearchServer) {
	s.RegisterService(&_PerilSearch_serviceDesc, srv)
}

func _PerilSearch_SearchPeril_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(PerilSearchServer).SearchPeril(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _PerilSearch_serviceDesc = grpc.ServiceDesc{
	ServiceName: "perils.PerilSearch",
	HandlerType: (*PerilSearchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchPeril",
			Handler:    _PerilSearch_SearchPeril_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x48, 0x2d, 0xca,
	0xcc, 0x89, 0x2f, 0x4e, 0x4d, 0x2c, 0x4a, 0xce, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x03, 0x8b, 0x15, 0x2b, 0xc9, 0x72, 0xf1, 0x06, 0x83, 0xc5, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b,
	0x4b, 0x84, 0x78, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x95,
	0x14, 0xb8, 0xb8, 0x61, 0xd2, 0x05, 0x39, 0x95, 0x42, 0x82, 0x5c, 0x9c, 0x60, 0x7d, 0x99, 0x79,
	0x69, 0xf9, 0x10, 0x15, 0x46, 0x5e, 0x5c, 0xdc, 0x01, 0x20, 0x21, 0x88, 0x32, 0x21, 0x6b, 0x98,
	0x06, 0xb0, 0xa0, 0x90, 0xa8, 0x1e, 0xc4, 0x1e, 0x3d, 0x14, 0x4b, 0xa4, 0x84, 0xd1, 0x85, 0x81,
	0x86, 0x2b, 0x31, 0x38, 0x49, 0x70, 0x09, 0x64, 0xe6, 0xeb, 0xa5, 0x17, 0x15, 0x24, 0xeb, 0xa5,
	0x56, 0x24, 0xe6, 0x16, 0xe4, 0xa4, 0x16, 0x2f, 0x62, 0x62, 0xf6, 0xf0, 0x09, 0x4f, 0x62, 0x03,
	0xbb, 0xda, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x1f, 0xa8, 0xb2, 0xdf, 0xcb, 0x00, 0x00, 0x00,
}
